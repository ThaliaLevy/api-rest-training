package gft.services;

import java.util.Optional;

import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import gft.entities.Usuario;
import gft.repositories.UsuarioRepository;

@Service
public class UsuarioService implements UserDetailsService {

private final UsuarioRepository usuarioRepository;
	
	public UsuarioService(UsuarioRepository usuarioRepository) {
		this.usuarioRepository = usuarioRepository;
	}
	
	public Usuario buscarUsuarioPorEmail(String email) {
		Optional<Usuario> optional = usuarioRepository.findByEmail(email);
		
		if(optional.isEmpty()) {
			throw new UsernameNotFoundException("Usuário não encontrado!");
		}
		
		return optional.get();
	}

	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		return buscarUsuarioPorEmail(username);
	}

	public Usuario buscarUsuarioPorId(Long idUsuario) {
		Optional<Usuario> optional = usuarioRepository.findById(idUsuario);
		
		if(optional.isEmpty()) {
			throw new RuntimeException("Usuário não encontrado!");
		}
		return optional.get();
	}

	public Usuario salvarUsuario(Usuario usuario) {
		return usuarioRepository.save(usuario);
	}
	
/*	public Etiqueta atualizarEtiqueta(Etiqueta etiqueta, Long id) {
		Etiqueta etiquetaOriginal = this.buscarEtiqueta(id);
		etiqueta.setId(etiquetaOriginal.getId());

		return etiquetaRepository.save(etiqueta);
	}

	public boolean verificarSeEtiquetaJaExiste(Etiqueta etiqueta) {
		String nomeNovaEtiqueta = etiqueta.getNome();
		Collection<Etiqueta> idEtiquetaExistente = etiquetaRepository.findByNome(nomeNovaEtiqueta);
		
		if(!idEtiquetaExistente.isEmpty()) {
			Object[] teste = idEtiquetaExistente.toArray();
			Long testee = Long.parseLong(teste[0] + "");
			
			
			atualizarEtiqueta(etiqueta, testee);
			
			return true;
		} else {
			
		}
		return false;
	}*/

	public Usuario salvarEtiqueta(Usuario usuario) {
			return usuarioRepository.save(usuario);

	}
}
