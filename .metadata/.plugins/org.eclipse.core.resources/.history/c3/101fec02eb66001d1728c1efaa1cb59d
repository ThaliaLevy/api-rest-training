package gft.controllers;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import gft.dto.etiqueta.EtiquetaMapper;
import gft.dto.etiqueta.RegistroEtiquetaDTO;
import gft.dto.usuario.ConsultaUsuarioDTO;
import gft.dto.usuario.RegistroUsuarioDTO;
import gft.dto.usuario.UsuarioMapper;
import gft.entities.Etiqueta;
import gft.entities.Noticia;
import gft.entities.Usuario;
import gft.services.EtiquetaService;
import gft.services.UsuarioService;

@RestController
@RequestMapping("v1/usuarios")
public class UsuarioController {

	private final UsuarioService usuarioService;
	private final EtiquetaService etiquetaService;

	public UsuarioController(UsuarioService usuarioService, EtiquetaService etiquetaService) {
		this.usuarioService = usuarioService;
		this.etiquetaService = etiquetaService;
	}

	@PostMapping
	public ResponseEntity<ConsultaUsuarioDTO> salvarUsuario(@RequestBody RegistroUsuarioDTO dto) {
		Usuario usuario = usuarioService.salvarUsuario(UsuarioMapper.fromDTO(dto));
		return ResponseEntity.ok(UsuarioMapper.fromEntity(usuario));
	}

	@SuppressWarnings("rawtypes")
	@PostMapping("/etiquetas/vincular")
	public ResponseEntity salvarEtiqueta(@RequestBody RegistroEtiquetaDTO dto) {
		Usuario usuario = (Usuario) SecurityContextHolder.getContext().getAuthentication().getPrincipal();

		Etiqueta etiqueta = etiquetaService.salvarEtiqueta(EtiquetaMapper.fromDTO(usuario, dto));

		if (etiqueta == null) {
			return ResponseEntity.status(HttpStatus.ALREADY_REPORTED).body("Etiqueta já está vinculada ao usuário!");
		} else {
			return ResponseEntity.status(HttpStatus.CREATED).body("Etiqueta vinculada com sucesso!");
		}
	}
	
	@SuppressWarnings("rawtypes")
	@GetMapping("/noticias/") //TODO: colocar uma validação para quando o usuario não passou parametro (não possui etiqueta)
	public ResponseEntity obterRespostaApi(@RequestParam String q, @RequestParam String date){
		if(q.equals("") || date.equals("")) {
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Obrigatória a passagem dos parâmetros.");
		}
		
		System.out.println(date);
		Usuario usuario = (Usuario) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		Noticia noticia = etiquetaService.webClient(usuario, q, date);
		
		if (noticia == null) {
			return ResponseEntity.status(HttpStatus.ALREADY_REPORTED).body("Etiqueta não está cadastrada para o usuário.");
		} else {
			return ResponseEntity.ok(noticia);
		}
	}
	
	
}
